[tox]
requires =
    tox-conda
    setuptools >= 30.3.0
    pip >= 19.3.1
envlist =
    py{313,314}-test{,-alldeps,-devdeps}{,-cov}
    build_docs
    linkcheck
    codestyle
isolated_build = true

[testenv]
# need to install pymc via conda to avoid pytensor compiler issues
conda_channels =
    conda-forge
conda_deps =
    pymc
conda_install_args=
    --override-channels

# Pass through the following environment variables which may be needed for the CI
passenv = HOME,WINDIR,LC_ALL,LC_CTYPE,CC,CI

# Set variable to point to the nightly wheels for dev dependencies
setenv =
    devdeps: PIP_EXTRA_INDEX_URL = https://pypi.anaconda.org/astropy/simple https://pypi.anaconda.org/liberfa/simple https://pypi.anaconda.org/scientific-python-nightly-wheels/simple

# Run the tests in a temporary directory to make sure that we don't import
# this package from the source tree
changedir = .tmp/{envname}

# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#
description =
    run tests
    alldeps: with all optional dependencies
    devdeps: with the latest nightly wheels of key dependencies
    cov: and test coverage

# The following provides some specific pinnings for key packages
deps =
    cov: coverage
    devdeps: numpy>=0.0.dev0
    devdeps: astropy>=0.0.dev0
    devdeps: scipy>=0.0.dev0
    devdeps: matplotlib>=0.0.dev0
    devdeps: xarray>=0.0.dev0
    devdeps: pandas>=0.0.dev0

# The following indicates which extras_require from setup.cfg will be installed
extras =
    test
    alldeps: extra

commands =
    pip freeze
    !cov: pytest --pyargs pytelpoint {toxinidir}/docs {posargs}
    cov: pytest --pyargs pytelpoint {toxinidir}/docs --cov pytelpoint --cov-config={toxinidir}/pyproject.toml {posargs}
    cov: coverage xml -o {toxinidir}/coverage.xml

[testenv:build_docs]
changedir = docs
description = invoke sphinx-build to build the HTML docs
extras = docs
commands =
    pip freeze
    sphinx-build -W -b html . _build/html

[testenv:linkcheck]
changedir = docs
description = check the links in the HTML docs
extras = docs
commands =
    pip freeze
    sphinx-build -W -b linkcheck . _build/html

[testenv:codestyle]
skip_install = true
changedir = .
description = check code style, e.g. with flake8
deps = flake8
commands = flake8 pytelpoint --count --max-line-length=132
